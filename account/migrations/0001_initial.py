# Generated by Django 4.2.11 on 2024-06-07 15:01

import account.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=255, unique=True, verbose_name="Email"
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        choices=[("Mr", "Mr"), ("Mrs", "Mrs")],
                        max_length=5,
                        null=True,
                    ),
                ),
                ("first_name", models.CharField(max_length=200)),
                (
                    "middle_name",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("last_name", models.CharField(max_length=200)),
                ("phone", models.CharField(max_length=15)),
                (
                    "dateofbirth",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("numberofdependents", models.IntegerField(blank=True, null=True)),
                ("tfn", models.IntegerField(blank=True, null=True)),
                ("password", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "token",
                    models.CharField(
                        blank=True, default="1234", max_length=10, null=True
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Male", "Male"),
                            ("Female", "Female"),
                            ("Transgender", "Transgender"),
                            ("non-binary/non-conforming", "non-binary/non-conforming"),
                            ("prefer not to say", "prefer not to say"),
                        ],
                        max_length=30,
                        null=True,
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("admin", "admin"),
                            ("staff", "staff"),
                            ("referuser", "referuser"),
                            ("user", "user"),
                        ],
                        default="user",
                        max_length=10,
                    ),
                ),
                ("abn", models.BooleanField(blank=True, default=False, null=True)),
                ("spouse", models.BooleanField(blank=True, default=False, null=True)),
                (
                    "medicareinformation",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("received", "received"),
                            ("inprogress", "inprogress"),
                            ("pending", "pending"),
                            ("seentforsign", "seentforsign"),
                            ("signed", "signed"),
                            ("logdedwithato", "lodgedwithato"),
                            ("dormat", "dormat"),
                        ],
                        default="received",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "payment_status",
                    models.CharField(
                        blank=True,
                        choices=[("paid", "paid"), ("unpaid", "unpaid")],
                        default="unpaid",
                        max_length=100,
                        null=True,
                    ),
                ),
                ("is_export", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("is_admin", models.BooleanField(default=False)),
                ("is_superuser", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Additionalinformationandsupportingdocuments",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("note", models.TextField(blank=True, max_length=2000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="FormCharge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fixed",
                    models.IntegerField(blank=True, default=1, null=True, unique=True),
                ),
                ("amount", models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="FormDate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "year",
                    models.IntegerField(
                        default=account.models.current_year,
                        validators=[account.models.validate_year],
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="formdata",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ReferalData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("not due", "not due"),
                            ("payable", "payable"),
                            ("settled", "settled"),
                        ],
                        default="not due",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "settleddate",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("commissionamt", models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="SupportingDocuents",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "supportingdocuments",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="user/documents",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["jpg", "jpeg", "png", "pdf"]
                            )
                        ],
                    ),
                ),
                (
                    "AddFile",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="supportingdocuments",
                        to="account.additionalinformationandsupportingdocuments",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Spouse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=100)),
                (
                    "middle_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("last_name", models.CharField(max_length=100)),
                ("spouse_taxable_income", models.IntegerField(blank=True, null=True)),
                ("dob", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "form_date",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="spouses",
                        to="account.formdate",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Residential_addresh",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "res_address1",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "res_address2",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "res_addresslocation",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "res_addresspostcode",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "res_addreshstate",
                    models.CharField(
                        choices=[
                            ("NSW", "NSW"),
                            ("AAT", "AAT"),
                            ("ACT", "ACT"),
                            ("VIC", "VIC"),
                            ("SA", "SA"),
                            ("QLD", "QLD"),
                            ("NT", "NT"),
                            ("WA", "WA"),
                            ("TAS", "TAS"),
                        ],
                        max_length=3,
                    ),
                ),
                (
                    "form_date",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="residential_address",
                        to="account.formdate",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ReferralUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("company", models.CharField(blank=True, max_length=500, null=True)),
                (
                    "company_logo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="refuser/logo",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["jpg", "jpeg", "png", "pdf"]
                            )
                        ],
                    ),
                ),
                (
                    "referrercode",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("isrequired", models.BooleanField(blank=True, null=True)),
                (
                    "commissiontype",
                    models.BooleanField(blank=True, default=True, null=True),
                ),
                ("commission", models.FloatField(blank=True, null=True)),
                (
                    "referrerurl",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "qrcode",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="refuser/qr",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["jpg", "jpeg", "png", "pdf"]
                            )
                        ],
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="referuser",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ReferalSettlement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("settledamount", models.FloatField(blank=True, null=True)),
                (
                    "settleddate",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "refuser",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="referral_user_settlement",
                        to="account.referraluser",
                    ),
                ),
                (
                    "user",
                    models.ManyToManyField(
                        blank=True, related_name="user_data", to="account.referaldata"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="referaldata",
            name="referal",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_DEFAULT,
                to="account.referraluser",
            ),
        ),
        migrations.AddField(
            model_name="referaldata",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="referral_data",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="Passport_DrivingLicense",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "passport",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="user/documents",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["jpg", "jpeg", "png", "pdf"]
                            )
                        ],
                    ),
                ),
                (
                    "AddFile",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="passportdrivinglicense",
                        to="account.additionalinformationandsupportingdocuments",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Occupation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("occupation", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "form_date",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="occupation",
                        to="account.formdate",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MedicareInformation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "medicaretype",
                    models.CharField(
                        blank=True,
                        choices=[("partially", "partially"), ("fully", "fully")],
                        max_length=100,
                        null=True,
                    ),
                ),
                ("date", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "form_date",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="medicare_info",
                        to="account.formdate",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BankDetails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "etaaccountname",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "eftbsbnumber",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "eftaccountnumber",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "form_date",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bank_details",
                        to="account.formdate",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ApplicableIncomeCategories",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("salary_wages", models.BooleanField(default=False)),
                ("salary_wages_amt", models.FloatField(blank=True, null=True)),
                ("pandemic_leave_disaster_payment", models.BooleanField(default=False)),
                (
                    "pandemic_leave_disaster_payment_amt",
                    models.FloatField(blank=True, null=True),
                ),
                ("dividends", models.BooleanField(default=False)),
                ("dividends_amt", models.FloatField(blank=True, null=True)),
                ("employment_share_scheme", models.BooleanField(default=False)),
                (
                    "employment_share_scheme_amt",
                    models.FloatField(blank=True, null=True),
                ),
                ("trust_partnership_distribution", models.BooleanField(default=False)),
                (
                    "trust_partnership_distribution_amt",
                    models.FloatField(blank=True, null=True),
                ),
                ("income_from_business", models.BooleanField(default=False)),
                ("income_from_business_amt", models.FloatField(blank=True, null=True)),
                ("capital_gain_loss", models.BooleanField(default=False)),
                ("capital_gain_loss_amt", models.FloatField(blank=True, null=True)),
                ("rental_income", models.BooleanField(default=False)),
                ("rental_income_amt", models.FloatField(blank=True, null=True)),
                ("foreign_income", models.BooleanField(default=False)),
                ("foreign_income_amt", models.FloatField(blank=True, null=True)),
                (
                    "investment_in_share_crypto_cfd_forex_trading",
                    models.BooleanField(default=False),
                ),
                (
                    "investment_in_share_crypto_cfd_forex_trading_amt",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "other_income_not_specified_above",
                    models.BooleanField(default=False),
                ),
                (
                    "other_income_not_specified_above_amt",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "occupation",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="account.occupation",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ApplicableExpensesCategories",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("work_related_car_expenses", models.BooleanField(default=False)),
                (
                    "work_related_car_expenses_amt",
                    models.FloatField(blank=True, null=True),
                ),
                ("work_related_travel_expenses", models.BooleanField(default=False)),
                (
                    "work_related_travel_expenses_amt",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "work_related_clothing_laundry_dry_cleaning",
                    models.BooleanField(default=False),
                ),
                (
                    "work_related_clothing_laundry_dry_cleaning_amt",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "work_related_self_education_expenses",
                    models.BooleanField(default=False),
                ),
                (
                    "work_related_self_education_expenses_amt",
                    models.FloatField(blank=True, null=True),
                ),
                ("gift_donation", models.BooleanField(default=False)),
                ("gift_donation_amt", models.FloatField(blank=True, null=True)),
                ("tax_agents_fee", models.BooleanField(default=False)),
                ("tax_agents_fee_amt", models.FloatField(blank=True, null=True)),
                ("income_protection_insurance", models.BooleanField(default=False)),
                (
                    "income_protection_insurance_amt",
                    models.FloatField(blank=True, null=True),
                ),
                ("personal_contribution_to_super", models.BooleanField(default=False)),
                (
                    "personal_contribution_to_super_amt",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "professional_membership_union_fee",
                    models.BooleanField(default=False),
                ),
                (
                    "professional_membership_union_fee_amt",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "other_expenses_not_specified_above",
                    models.BooleanField(default=False),
                ),
                (
                    "other_expenses_not_specified_above_amt",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "occupation",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="account.occupation",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="additionalinformationandsupportingdocuments",
            name="form_date",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="additional_information",
                to="account.formdate",
            ),
        ),
        migrations.CreateModel(
            name="Abn_income",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("abn", models.IntegerField()),
                (
                    "natureofworkdone",
                    models.TextField(blank=True, max_length=2000, null=True),
                ),
                (
                    "grossincomereceivedinbank",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "form_date",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="abn_income",
                        to="account.formdate",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="user",
            name="referercode",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_DEFAULT,
                related_name="users_with_referercode",
                to="account.referraluser",
            ),
        ),
    ]
